{"version":3,"sources":["components/Ingredient/Ingredient.module.css","pages/Menu/Menu.module.css","components/Order/Order.module.css","components/Item/Item.module.css","components/Item/ItemWrapper.module.css","components/Ingredient/IngredientWrapper.module.css","components/Item/Item.js","components/Item/ItemWrapper.js","components/Ingredient/Ingredient.js","components/Ingredient/IngredientWrapper.js","components/Order/Order.js","components/OrderItem/OrderCustom.js","components/OrderItem/OrderItem.js","pages/Menu/Menu.js","App.js","index.js"],"names":["module","exports","panel","outOfStock","selected","image","menu_container","submit","order_num_panel","order_num","order_panel","order_items","total","name","cancel_btn","submit_btn","menu_btn","Item","react_default","a","createElement","className","concat","style","this","props","isInStock","onClick","src","imgSrc","alt","price","Component","ItemWrapper","children","Link","to","buttonDisplay","Ingredient","isselected","IngredientWrapper","previous","next","Order","bottom","maxScrollTop","_this","orderItems","scrollHeight","clientHeight","scrollTop","_this2","ref","el","OrderCustom","OrderItem","title","aria-hidden","Menu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","order","timeOver","orderPage","orderNumber","stockTest","ingredients","forEach","ingr","stock","ingredientToggle","ingredient","size","length","i","indexOf","addIngredient","removeIngredient","addOrderItem","sandwich","newSandwich","id","type","meat","newStock","inventory","meatStock","find","quantity","console","log","updateTotal","updateOrder","slice","push","setState","nextPage","deleteSandwich","meats","toppings","topping","ingredientStock","splice","newOrder","deleteIngredient","j","calculateTotal","toFixed","page","previousPage","index","moreFood","reset","checkout","data","axios","post","then","response","getMenuData","setTimeout","catch","err","sandwichStock","check","requiredMeat","stockedMeat","nameToImgSrc","replace","Math","floor","random","pageRender","ItemWrapper_ItemWrapper","menuData","sandwiches","map","checkStock","Item_Item","key","ingrStyle","filter","ingredientsRender","IngredientWrapper_IngredientWrapper","ing","Ingredient_Ingredient","orderID","_this3","Redirect","components_Order_Order","back","OrderItem_OrderItem","OrderCustom_OrderCustom","App","counter","callback","get","res","cloneIngredients","newObj","assign","menuRender","pages_Menu_Menu","event","target","value","newInventory","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,MAAA,0BAAAC,WAAA,+BAAAC,SAAA,6BAAAC,MAAA,+CCAlBL,EAAAC,QAAA,CAAkBK,eAAA,6BAAAC,OAAA,qBAAAC,gBAAA,8BAAAC,UAAA,6CCAlBT,EAAAC,QAAA,CAAkBS,YAAA,2BAAAC,YAAA,2BAAAC,MAAA,0CCAlBZ,EAAAC,QAAA,CAAkBY,KAAA,mBAAAR,MAAA,yCCAlBL,EAAAC,QAAA,CAAkBa,WAAA,gCAAAC,WAAA,qDCAlBf,EAAAC,QAAA,CAAkBe,SAAA,oPCEZC,mLAGF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAC,OAAKC,IAAMV,KAAX,sBAAAS,OAAoCE,KAAKC,MAAMC,WACxDC,QAASH,KAAKC,MAAME,SAEpBT,EAAAC,EAAAC,cAAA,OACEC,UAAWE,IAAMlB,MACjBuB,IAAKJ,KAAKC,MAAMI,OAChBC,IAAKN,KAAKC,MAAMZ,KAAO,cAEzBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAKI,KAAKC,MAAMZ,MAChBK,EAAAC,EAAAC,cAAA,UAAK,IAAMI,KAAKC,MAAMM,iBAhBfC,sCCCbC,mLAGF,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZG,KAAKC,MAAMS,UAEdhB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,KACPlB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMT,WAAX,0BACZI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,mBAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMR,WAAX,0BAAAO,OAA8CE,KAAKC,MAAMY,eAAiBV,QAASH,KAAKC,MAAME,SAC1GT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,4BApBUW,8BCDpBM,mLAGF,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEC,UAAS,GAAAC,OAAKC,IAAMrB,MAAX,4BAAAoB,OAA2CE,KAAKC,MAAMC,UAAtD,KAAAJ,OAAmEE,KAAKC,MAAMc,YACvFZ,QAASH,KAAKC,MAAME,SAEpBT,EAAAC,EAAAC,cAAA,OACEC,UAAWE,IAAMlB,MACjBuB,IAAKJ,KAAKC,MAAMI,OAChBC,IAAKN,KAAKC,MAAMZ,OAElBK,EAAAC,EAAAC,cAAA,UAAKI,KAAKC,MAAMZ,MAChBK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mCAfYY,8BCAnBQ,mLAGF,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,2BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZG,KAAKC,MAAMS,WAGhBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMP,SAAX,cAAiCW,QAASH,KAAKC,MAAMgB,UAAnE,SAEFvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMP,SAAX,cAAiCW,QAASH,KAAKC,MAAMiB,MAAnE,kBAhBoBV,8BC4BjBW,6MAnBbC,OAAS,WACP,IAEMC,EAFeC,EAAKC,WAAWC,aACtBF,EAAKC,WAAWE,aAE/BH,EAAKC,WAAWG,UAAYL,EAAe,EAAIA,EAAe,sFAX9DrB,KAAKoB,sDAILpB,KAAKoB,0CAUE,IAAAO,EAAA3B,KACP,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAMb,aACpBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAMZ,YAAayC,IAAK,SAACC,GAAQF,EAAKJ,WAAaM,IAChE7B,KAAKC,MAAMS,UAEdhB,EAAAC,EAAAC,cAAA,MAAIC,UAAS,GAAAC,OAAKC,IAAMX,MAAX,UAAb,UAA8C,IAAMY,KAAKC,MAAMb,eAtBnDoB,aCDdsB,mLAEF,OACEpC,EAAAC,EAAAC,cAAA,UACGI,KAAKC,MAAMZ,aAJMmB,aCCpBuB,0LAEF,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBM,QAASH,KAAKC,MAAME,SACpDT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUmC,MAAM,IAAIC,cAAY,UAGlDvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAAA,cACGI,KAAKC,MAAMZ,KAAO,cAIvBK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,cAAS,IAAMI,KAAKC,MAAMM,QAErDb,EAAAC,EAAAC,cAAA,UACGI,KAAKC,MAAMS,mBApBAF,wDC8XT0B,cA5Wb,SAAAA,EAAYjC,GAAO,IAAAqB,EAAAK,EAAA3B,KAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAkC,IACjBZ,EAAAa,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvC,KAAMC,KAIRuC,MAAQ,CACNC,MAAO,GACPC,UAAU,EACVC,UAAW,EACXvD,MAAO,EACPwD,YAAa,GAVItB,EAuBnBuB,UAAY,SAAAC,GAKV,OAJAA,EAAYC,QAAS,SAAAC,GACnBA,EAAKC,MAAQ,IAGRH,GA5BUxB,EAgCnB4B,iBAAmB,SAAAC,GAEjB,IAAMC,EAAO9B,EAAKkB,MAAMC,MAAMY,OAAS,EAEjCC,EAAIhC,EAAKkB,MAAMC,MAAMW,GAAMN,YAAYS,QAAQJ,EAAW9D,OAGrD,IAAPiE,EAEEH,EAAWF,MAAQ,IACrBE,EAAWF,QACX3B,EAAKkC,cAAcL,KAGrBA,EAAWF,QACX3B,EAAKmC,iBAAiBH,KA/CPhC,EAoDnBoC,aAAe,SAACC,EAAUzD,GAExB,GAAGA,EAAU,CACX,IAAI0D,EAAc,CAChBC,GAAIF,EAASE,GACbC,KAAMH,EAASG,KACfC,KAAMJ,EAASI,KACfjB,YAAa,GACbvC,MAAOoD,EAASpD,OAGZyD,EAAW1C,EAAKrB,MAAMgE,UAE5BL,EAAYG,KAAKhB,QAAS,SAAAgB,GACxB,IAAIG,EAAYF,EAASG,KAAM,SAAAhB,GAAU,OAAIA,EAAW9D,OAAS0E,EAAK1E,OACtE6E,EAAUjB,OAASc,EAAKK,SACxBC,QAAQC,IAAIJ,EAAU7E,KAAM6E,EAAUjB,SAIxC,IAAIsB,EAAcjD,EAAKkB,MAAMpD,MAC7BmF,GAAeZ,EAASpD,MAExB,IAAIiE,EAAclD,EAAKkB,MAAMC,MAAMgC,QACnCD,EAAYE,KAAKd,GAGjBtC,EAAKqD,SAAS,CAEZlC,MAAO+B,EACPpF,MAAOmF,IAGTjD,EAAKsD,aArFUtD,EA0FnBuD,eAAiB,SAAAvB,GAGf,IAAMW,EAAY3C,EAAKrB,MAAMgE,UACvBN,EAAWrC,EAAKkB,MAAMC,MAAMa,GAC5BwB,EAAQnB,EAASI,KACjBgB,EAAWpB,EAASb,YAC1BgC,EAAM/B,QAAS,SAAAgB,GACb,IAAIG,EAAYD,EAAUE,KAAM,SAAAhB,GAAU,OAAIA,EAAW9D,OAAS0E,EAAK1E,OACvE6E,EAAUjB,OAASc,EAAKK,SACxBC,QAAQC,IAAIJ,EAAU7E,KAAM6E,EAAUjB,SAExC8B,EAAShC,QAAS,SAAAiC,GAChB,IAAIC,EAAkBhB,EAAUE,KAAM,SAAAhB,GAAU,OAAIA,EAAW9D,OAAS2F,IACxEC,EAAgBhC,QAChBoB,QAAQC,IAAIW,EAAgB5F,KAAM4F,EAAgBhC,SAGpD,IAAIuB,EAAclD,EAAKkB,MAAMC,MAE7B+B,EAAYU,OAAO5B,EAAG,GACtBhC,EAAKqD,SAAS,CACZlC,MAAO+B,KAMJlB,IAAOhC,EAAKkB,MAAMC,MAAMY,OAAS,GAAM/B,EAAKkB,MAAMG,UAAY,GAA6B,IAAvB6B,EAAYnB,SAEnF/B,EAAKqD,SAAS,CAAChC,UAAW,KAxHXrB,EA6HnBkC,cAAgB,SAAAL,GACd,IAAIgC,EAAW7D,EAAKkB,MAAMC,MAAMgC,QAGhCU,EAFa7D,EAAKkB,MAAMC,MAAMY,OAAS,GAExBP,YAAY4B,KAAKvB,EAAW9D,MAC3CiC,EAAKqD,SAAS,CAAClC,MAAO0C,KAlIL7D,EAqInBmC,iBAAmB,SAAAH,GACjB,IAAI6B,EAAW7D,EAAKkB,MAAMC,MAAMgC,QAGhCU,EAFa7D,EAAKkB,MAAMC,MAAMY,OAAS,GAExBP,YAAYoC,OAAO5B,EAAG,GACrChC,EAAKqD,SAAS,CAAClC,MAAO0C,KA1IL7D,EA+InB8D,iBAAmB,SAACjC,EAAYG,GAC9B,IAAM+B,EAAI/D,EAAKkB,MAAMC,MAAMa,GAAGR,YAAYS,QAAQJ,GAC9CgC,EAAW7D,EAAKkB,MAAMC,MAAMgC,QAChCU,EAAS7B,GAAGR,YAAYoC,OAAOG,EAAG,GAClC/D,EAAKqD,SAAS,CAAClC,MAAO0C,KAnJL7D,EAuJnBgE,eAAiB,WACf,IAAIlG,EAAQ,EAKZ,OAJAkC,EAAKkB,MAAMC,MAAMM,QAAQ,SAAAY,GACvBvE,GAASuE,EAASpD,QAGbnB,EAAMmG,QAAQ,IA7JJjE,EAgKnBsD,SAAW,WACT,GAA4B,IAAzBtD,EAAKkB,MAAMG,UAAd,CAKA,IAAI6C,EAAOlE,EAAKkB,MAAMG,UACtB6C,IACAlE,EAAKqD,SAAS,CAAChC,UAAW6C,SANxBlE,EAAKqD,SAAS,CAAChC,UAAW,KAlKXrB,EA2KnBmE,aAAe,WACb,IAAID,EAAOlE,EAAKkB,MAAMG,UACtB,GAAa,IAAT6C,EAAW,CACb,IAAME,EAAQpE,EAAKkB,MAAMC,MAAMY,OAAS,EACxC/B,EAAKuD,eAAea,GAEtBF,IACAlE,EAAKqD,SAAS,CAAChC,UAAW6C,KAlLTlE,EAsLnBqE,SAAW,WAETrE,EAAKqD,SAAS,CAAChC,UAAW,KAxLTrB,EA4LnBsE,MAAQ,WACNtE,EAAKqD,SAAS,CACZlC,MAAO,GACPE,UAAW,KA/LIrB,EAoMnBuE,SAAW,WACT,IAAMC,EAAOxE,EAAKkB,MAAMC,MAExBsD,IAAMC,KAAK,aAAcF,GAAMG,KAAM,SAAAC,GACnC7B,QAAQC,IAAI4B,GAEZ5E,EAAKqD,SAAS,CAAChC,UAAW,EAAGC,YAAasD,EAASJ,KAAKlD,cACxDtB,EAAKrB,MAAMkG,cACXC,WAAW,WACT9E,EAAKqD,SAAS,CAACjC,UAAU,KACxB,OACF2D,MAAO,SAAAC,GACRjC,QAAQC,IAAIgC,MAhNGhF,EAoNnBiF,cAAgB,SAAAzB,GACd,IAAI0B,GAAQ,EAQZ,OAPA1B,EAAM/B,QAAS,SAAA0D,GACb,IAAMC,EAAcpF,EAAKrB,MAAMgE,UAC5BE,KAAM,SAAAhB,GAAU,OAAIA,EAAW9D,OAASoH,EAAapH,OAGrDoH,EAAarC,SAAWsC,EAAYzD,QAAOuD,GAAQ,KAEjDA,GA7NUlF,EAgOnBqF,aAAe,SAAAtH,GACb,IAAIe,EAAMf,EAIV,OAFAe,EAAM,aADNA,EAAMA,EAAIwG,QAAQ,IAAK,MACG,gBAnOTtF,EAyOnBsB,YAAc,WAEZ,OAAOiE,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GA3OxBzF,EA+OnB0F,WAAa,WACX,IAAIlE,EACJ,OAAQxB,EAAKkB,MAAMG,WACjB,KAAK,EACH,OAEEjD,EAAAC,EAAAC,cAACqH,EAAD,CACEpG,cAA2C,IAA5BS,EAAKkB,MAAMC,MAAMY,OAAe,SAAW,GAC1DlD,QAASmB,EAAKuE,UAEbvE,EAAKrB,MAAMiH,SAASC,WAAWC,IAAI,SAAAzD,GAClC,IAAI0D,EAAa/F,EAAKiF,cAAc5C,EAASI,MAC7C,OACErE,EAAAC,EAAAC,cAAC0H,EAAD,CACEC,IAAK5D,EAASG,KACdzE,KAAMsE,EAASG,KACfvD,MAAOoD,EAASpD,MAChBL,WAA0B,IAAfmH,EAAsB,UAAYG,IAAU7I,WACvD0B,OAAQiB,EAAKqF,aAAahD,EAASG,MACnC3D,QAAS,kBAAMmB,EAAKoC,aAAaC,EAAU0D,SAMvD,KAAK,EAGH,OAFAvE,EAAcxB,EAAKrB,MAAMgE,UACtBwD,OAAO,SAAAtE,GAAU,MAAwB,UAApBA,EAAWW,OAC5BpE,EAAAC,EAAAC,cAAC+B,EAAK+F,kBAAN,CAAwB5E,YAAaA,IAC9C,KAAK,EAGH,OAFAA,EAAcxB,EAAKrB,MAAMgE,UACtBwD,OAAO,SAAAtE,GAAU,MAAwB,WAApBA,EAAWW,OAC5BpE,EAAAC,EAAAC,cAAC+B,EAAK+F,kBAAN,CAAwB5E,YAAaA,IAC9C,KAAK,EAGH,OAFAA,EAAcxB,EAAKrB,MAAMgE,UACtBwD,OAAO,SAAAtE,GAAU,MAAwB,YAApBA,EAAWW,OAC5BpE,EAAAC,EAAAC,cAAC+B,EAAK+F,kBAAN,CAAwB5E,YAAaA,IAC9C,KAAK,EACH,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMhB,OAAX,iBACZW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAMf,gBAAX,gBACZU,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAS,GAAAC,OAAKC,IAAMd,UAAX,eAAmC,IAAMqC,EAAKkB,MAAMI,eAIzE,QACE,OACElD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UAAQO,QAASmB,EAAKsE,OAAtB,aAlSStE,EAwSnBoG,kBAAoB,SAAAzH,GAClB,OACEP,EAAAC,EAAAC,cAAC+H,EAAD,CACEzG,KAAMI,EAAKsD,SACX3D,SAAUK,EAAKmE,cAEdxF,EAAM6C,YAAYsE,IAAI,SAAAjE,GACrB,IAAMyE,EAAMtG,EAAKkB,MAAMC,MAAMnB,EAAKkB,MAAMC,MAAMY,OAAS,GAAGP,YAC1D,OACEpD,EAAAC,EAAAC,cAACiI,EAAD,CACEN,IAAKpE,EAAW9D,KAChBA,KAAM8D,EAAW9D,KACjBgB,OAAQiB,EAAKqF,aAAaxD,EAAW9D,MACrCa,UAAWiD,EAAWF,MAAQ,EAAI,UAAYuE,IAAU7I,WACxDoC,WAAY6G,EAAIrE,QAAQJ,EAAW9D,OAAS,EAAImI,IAAU5I,SAAW,GACrEuB,QAAS,kBAAMmB,EAAK4B,iBAAiBC,UArT/C7B,EAAKwG,QAAU,EAFExG,wEA+TV,IAAAyG,EAAA/H,KACP,OAA4B,IAAxBA,KAAKwC,MAAME,SACNhD,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAUpH,GAAG,MAIpBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAMjB,gBACtBY,EAAAC,EAAAC,cAAAI,KAAMgH,WAAN,QAIFtH,EAAAC,EAAAC,cAACqI,EAAD,CACE7I,MAAOY,KAAKsF,iBACZ4C,KAAMlI,KAAKyF,cAEVzF,KAAKwC,MAAMC,MAAM2E,IAAI,SAACzD,EAAU+B,GAC/B,IAAM5C,EAAca,EAASb,YAC7B,OACEpD,EAAAC,EAAAC,cAACuI,EAAD,CACE9I,KAAMsE,EAASG,KACfyD,IAAK5D,EAASG,KAAO4B,EACrBnF,MAAOoD,EAASpD,MAAMgF,QAAQ,GAC9BpF,QAAS,kBAAM4H,EAAKlD,eAAea,KAElC5C,EAAYsE,IAAI,SAAAjE,GACf,OACEzD,EAAAC,EAAAC,cAACwI,EAAD,CACEb,IAAKpE,EACL9D,KAAM8D,EACNhD,QAAS,kBAAM4H,EAAK3C,iBAAiBjC,EAAW9D,KAAMqG,oBAhWzDlF,aCwFJ6H,oNAjGb7F,MAAQ,CACNsD,KAAM,KACN7B,UAAW,GACXqE,QAAS,KAYXnC,YAAc,SAAAoC,GAYZ,OAXAxC,IAAMyC,IAAI,aACTvC,KAAK,SAAAwC,GACJpE,QAAQC,IAAI,aAAcmE,EAAI3C,MAC9B,IAAM7B,EAAY3C,EAAKoH,iBAAiBD,EAAI3C,KAAKhD,aACjDxB,EAAKqD,SAAS,CACZmB,KAAM2C,EAAI3C,KACV7B,UAAWA,IAEbI,QAAQC,IAAI,aAAchD,EAAKkB,MAAMyB,aACpCoC,MAAO,SAAAC,GAAG,OAAIjC,QAAQC,IAAIgC,KAEtBiC,OAGTG,iBAAmB,SAAA5F,GAMjB,OALkBA,EAAYsE,IAAK,SAAAjE,GACjC,IAAIwF,EAASxG,OAAOyG,OAAO,GAAIzF,GAE/B,OADAwF,EAAO3E,SAAWb,EAAWF,MACtB0F,OAKXE,WAAa,SAAC5I,GACZ,OAAIqB,EAAKkB,MAAMsD,KACNpG,EAAAC,EAAAC,cAACkJ,EAAD3G,OAAAyG,OAAA,GAAU3I,EAAV,CACLiH,SAAU5F,EAAKkB,MAAMsD,KACrB7B,UAAW3C,EAAKkB,MAAMyB,UACtBkC,YAAa,kBAAM7E,EAAK6E,kBAIrBzG,EAAAC,EAAAC,cAAA,UAAK,oGAzCZI,KAAKmG,YAAY,cACjBJ,IAAMyC,IAAI,aAAavC,KAAK,SAAAwC,GAC1BpE,QAAQC,IAAImE,EAAI3C,KAAM,WAErBO,MAAO,SAAAC,GAAG,OAAIjC,QAAQC,IAAIgC,mDAwCTyC,GACpB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf5J,EAAO2J,EAAO3J,KACd6J,EAAelJ,KAAKwC,MAAMyB,UAEhCiF,EAAanG,QAAS,SAAAI,GAChBA,EAAW9D,OAASA,IACtB8D,EAAWa,SAAWiF,KAI1BjJ,KAAK2E,SAAS,CACZV,UAAWiF,qCAMb,OAEExJ,EAAAC,EAAAC,cAAA,8BA1EYY,cCHlB2I,IAASC,OAAO1J,EAAAC,EAAAC,cAACyJ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.35de75d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Ingredient_panel__3AOsF\",\"outOfStock\":\"Ingredient_outOfStock__3uiwX\",\"selected\":\"Ingredient_selected__1BQH3\",\"image\":\"Ingredient_image__1dW71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_container\":\"Menu_menu_container__3-PgW\",\"submit\":\"Menu_submit__2MbnJ\",\"order_num_panel\":\"Menu_order_num_panel__1tvXF\",\"order_num\":\"Menu_order_num__3EiRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_panel\":\"Order_order_panel__1LPcT\",\"order_items\":\"Order_order_items__3W1yG\",\"total\":\"Order_total__31fxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Item_name__3a8Gj\",\"image\":\"Item_image__1li23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancel_btn\":\"ItemWrapper_cancel_btn__187wi\",\"submit_btn\":\"ItemWrapper_submit_btn__1jhmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_btn\":\"IngredientWrapper_menu_btn__2krYy\"};","import React, { Component } from 'react';\nimport style from './Item.module.css'\n\nclass Item extends Component {\n\n  render() {\n    return (\n      <div className=\"col-6\">\n        <div\n          className={`${style.name} media m-2 shadow ${this.props.isInStock}`}\n          onClick={this.props.onClick}\n        >\n          <img\n            className={style.image}\n            src={this.props.imgSrc}\n            alt={this.props.name + \" sandwich\"}\n            />\n          <div className=\"media-body\">\n            <h1>{this.props.name}</h1>\n            <h3>{\"$\" + this.props.price}</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport { Item };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './ItemWrapper.module.css';\n\nclass ItemWrapper extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"display-4 text-center\">Sandwiches</h1>\n        <div className=\"p-2\">\n          <div className=\"row\">\n            {this.props.children}\n          </div>\n          <div className={\"row\"}>\n            <div className=\"col-4\">\n              <Link to=\"/\">\n                <div className={`${style.cancel_btn} text-center mr-3 p-1`}>\n                  <h2 className=\"align-middle\">Cancel Order</h2>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-8\">\n              <div className={`${style.submit_btn} text-center mr-3 p-1 ${this.props.buttonDisplay}`} onClick={this.props.onClick}>\n                <h2 className=\"align-middle\">Submit Order</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { ItemWrapper };","import React, { Component } from 'react';\nimport style from './Ingredient.module.css';\n\nclass Ingredient extends Component {\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div\n          className={`${style.panel} m-3 shadow text-center ${this.props.isInStock} ${this.props.isselected}`}\n          onClick={this.props.onClick}\n        >\n          <img\n            className={style.image}\n            src={this.props.imgSrc}\n            alt={this.props.name}\n          />          \n          <h2>{this.props.name}</h2>\n          <p><b>Out of stock</b></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Ingredient };","import React, { Component } from 'react';\nimport style from './IngredientWrapper.module.css';\n\nclass IngredientWrapper extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"m-3 text-center display-4\">Choose Your Ingredients</h1>\n        <div className=\"p-2\">\n          <div className=\"row\">\n            {this.props.children}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3 offset-3\">\n            <div className={`${style.menu_btn} shadow-sm`} onClick={this.props.previous}>Back</div>\n          </div>            \n          <div className=\"col-3\">\n            <div className={`${style.menu_btn} shadow-sm`} onClick={this.props.next}>Next</div>\n          </div>          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport { IngredientWrapper };","import React, { Component } from 'react';\nimport style from './Order.module.css';\n\nclass Order extends Component {\n  componentDidMount() {\n    this.bottom();\n  }\n\n  componentDidUpdate() {\n    this.bottom();\n  }\n\n  bottom = () => {\n    const scrollHeight = this.orderItems.scrollHeight;\n    const height = this.orderItems.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.orderItems.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  }\n\n  render() {\n    return(\n      <div className={style.order_panel}>\n        <div className={style.order_items} ref={(el) => {this.orderItems = el;}}>\n          {this.props.children}\n        </div>\n        <h2 className={`${style.total} mr-4`}>Total: {\"$\" + this.props.total}</h2>\n      </div>\n    )\n  }\n};\n\nexport default Order;","import React, { Component } from 'react';\r\n\r\nclass OrderCustom extends Component {\r\n  render() {\r\n    return(\r\n      <li>\r\n        {this.props.name}\r\n        {/* <button onClick={this.props.onClick}>Delete</button> */}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport { OrderCustom };","import React, { Component } from 'react';\r\nimport './orderItem.css';\r\n\r\nclass OrderItem extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"Order-Item clearfix\">\r\n\r\n        <span className=\"delete-btn mr-2\" onClick={this.props.onClick}>\r\n          <span className=\"oi oi-x\" title=\"x\" aria-hidden=\"true\"></span>\r\n        </span>\r\n\r\n        <div className=\"order-item-info\">\r\n\r\n          <span className=\"name h5\">\r\n            <strong>\r\n              {this.props.name + \" Sandwich\"}\r\n            </strong>         \r\n          </span>\r\n  \r\n          <span className=\"price h5\"><strong>{\"$\" + this.props.price}</strong></span>\r\n          \r\n          <ul>\r\n            {this.props.children}\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { OrderItem };","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Item, ItemWrapper } from './../../components/Item';\nimport { Ingredient, IngredientWrapper } from './../../components/Ingredient';\nimport Order from './../../components/Order';\nimport { OrderItem, OrderCustom } from './../../components/OrderItem';\nimport { Redirect } from 'react-router';\nimport style from './Menu.module.css';\nimport ingrStyle from './../../components/Ingredient/Ingredient.module.css';\nimport axios from 'axios';\n\n// TODO: \n// * Make terms more consistent:\n// * - non-meat ingredients should be 'toppings'\n// * - ingredients sould refer to meat and toppings\n// * Try to consolidate addIngredient, removeIngredient, and deleteIngredient methods\n// * Get deleteIngredient method working, add a delete icon on hover for orderCustom component\n// * Remove the state and use props where a state would be redundant\n\nclass Menu extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.orderID = 0;\n  }\n\n  state = {\n    order: [],\n    timeOver: false,\n    orderPage: 0,\n    total: 0,\n    orderNumber: 0  \n  }\n\n  // unused?\n  // Clones the ingredient data to be used to calculate the stock\n  // cloneIngredients = ingredients => {\n  //   const ingrClone = ingredients.map( ingredient => {\n  //     return Object.assign({}, ingredient);\n  //   });\n\n  //   return ingrClone\n  // }\n\n  stockTest = ingredients => {\n    ingredients.forEach( ingr => {\n      ingr.stock = 1;\n    });\n\n    return ingredients;\n  }\n\n  // Add or remove an ingredient from a sandwich being customized\n  ingredientToggle = ingredient => {\n\n    const size = this.state.order.length - 1\n    // Check if the ingredient is selected for the current sandwich\n    const i = this.state.order[size].ingredients.indexOf(ingredient.name);\n\n    // Check the order for the selected ingredient\n    if( i === -1 ) {\n      // Check if the topping is in stock\n      if (ingredient.stock > 0){\n        ingredient.stock--;\n        this.addIngredient(ingredient);\n      }\n    } else {\n      ingredient.stock++;\n      this.removeIngredient(i);\n    };\n  }\n\n  // Add a sandwich to the order\n  addOrderItem = (sandwich, isInStock) => {\n\n    if(isInStock){   \n      let newSandwich = {\n        id: sandwich.id,\n        type: sandwich.type,\n        meat: sandwich.meat,\n        ingredients: [],\n        price: sandwich.price\n      };\n\n      const newStock = this.props.inventory;\n\n      newSandwich.meat.forEach( meat => {\n        let meatStock = newStock.find( ingredient => ingredient.name === meat.name )\n        meatStock.stock -= meat.quantity;\n        console.log(meatStock.name, meatStock.stock);\n      });\n\n      // Add the sandwich's price to the total price\n      let updateTotal = this.state.total;\n      updateTotal += sandwich.price;\n      // Add the sandwich to the order\n      let updateOrder = this.state.order.slice();\n      updateOrder.push(newSandwich);\n\n      // Update the state\n      this.setState({\n        // inventory: newStock,\n        order: updateOrder,\n        total: updateTotal\n      });\n\n      this.nextPage();\n    }\n  }\n\n  // Remove a sandwich from an order\n  deleteSandwich = i => {\n\n    // Add the sandwich ingredients back to the stock\n    const inventory = this.props.inventory;\n    const sandwich = this.state.order[i];\n    const meats = sandwich.meat;\n    const toppings = sandwich.ingredients;\n    meats.forEach( meat => {\n      let meatStock = inventory.find( ingredient => ingredient.name === meat.name )\n      meatStock.stock += meat.quantity;\n      console.log(meatStock.name, meatStock.stock);\n    });\n    toppings.forEach( topping => {\n      let ingredientStock = inventory.find( ingredient => ingredient.name === topping );\n      ingredientStock.stock++;\n      console.log(ingredientStock.name, ingredientStock.stock);\n    });\n\n    let updateOrder = this.state.order\n    // If the sandwich being deleted is in the process of being customized, if it is last in the array\n    updateOrder.splice(i, 1);\n    this.setState({\n      order: updateOrder\n    });\n\n    // Conditions for returning to the first page after removing a sandwich from the order\n    // -When the user removes the sandwich they are customizing\n    // -When the order is emptied\n    if( (i === (this.state.order.length - 1) && this.state.orderPage < 4) || updateOrder.length === 0 ){\n      // Display the first order page\n      this.setState({orderPage: 0});\n    }\n\n  }\n  // Adds ingredient to the order\n  addIngredient = ingredient => {\n    let newOrder = this.state.order.slice();\n    const size = this.state.order.length - 1;\n\n    newOrder[size].ingredients.push(ingredient.name);\n    this.setState({order: newOrder});\n  }\n  // Removes ingredient from the order by toggling off from the menu\n  removeIngredient = i => {\n    let newOrder = this.state.order.slice();\n    const size = this.state.order.length - 1;\n\n    newOrder[size].ingredients.splice(i, 1);\n    this.setState({order: newOrder});\n  }\n\n\n  // Removes ingredient from order by hitting delete button in the order panel\n  deleteIngredient = (ingredient, i) => {\n    const j = this.state.order[i].ingredients.indexOf(ingredient);\n    let newOrder = this.state.order.slice();\n    newOrder[i].ingredients.splice(j, 1);\n    this.setState({order: newOrder});\n  }\n\n  // Determine the price of the order\n  calculateTotal = () => {\n    let total = 0;\n    this.state.order.forEach(sandwich => {\n      total += sandwich.price;\n    });\n\n    return total.toFixed(2);\n  }\n\n  nextPage = () => {\n    if(this.state.orderPage === 3) {\n      this.setState({orderPage: 0});\n      return;\n    }\n\n    let page = this.state.orderPage;\n    page++;\n    this.setState({orderPage: page});\n  }\n\n  previousPage = () => {\n    let page = this.state.orderPage;\n    if (page === 1){\n      const index = this.state.order.length - 1;\n      this.deleteSandwich(index);\n    }\n    page--;\n    this.setState({orderPage: page});\n  }\n\n  // Resets the menu page to order another sandwich\n  moreFood = () => {\n\n    this.setState({orderPage: 0});\n  }\n  \n  // Re-initialize the menu page\n  reset = () => {\n    this.setState({\n      order: [],\n      orderPage: 0\n    });\n  }\n\n  // Submit an order\n  checkout = () => {\n    const data = this.state.order;\n\n    axios.post(\"/api/order\", data).then( response => {\n      console.log(response);\n\n      this.setState({orderPage: 5, orderNumber: response.data.orderNumber});  \n      this.props.getMenuData();\n      setTimeout(() => {\n        this.setState({timeOver: true});\n      }, 5000)\n    }).catch( err => {\n      console.log(err);\n    });\n  }\n\n  sandwichStock = meats => {\n    let check = true;\n    meats.forEach( requiredMeat => {\n      const stockedMeat = this.props.inventory\n        .find( ingredient => ingredient.name === requiredMeat.name);\n\n\n      if(requiredMeat.quantity > stockedMeat.stock){check = false};\n    });\n    return check;\n  }\n\n  nameToImgSrc = name => {\n    let src = name;\n    src = src.replace(\" \", \"_\");\n    src = \"./images/\" + src + \"_200x120.png\";\n\n    return src;\n  }\n\n  // Gives a number for the order.\n  orderNumber = () => {\n    // Order number is a random placeholder number for now\n    return Math.floor(Math.random() * 100) + 1;\n  }\n\n  // Determine what gets rendered based on the orderPage variable\n  pageRender = () => {\n    let ingredients;\n    switch (this.state.orderPage) {\n      case 0:\n        return(\n               \n          <ItemWrapper\n            buttonDisplay={this.state.order.length === 0 ? 'd-none' : ''}\n            onClick={this.checkout}\n          >     \n            {this.props.menuData.sandwiches.map(sandwich => {\n              let checkStock = this.sandwichStock(sandwich.meat);\n              return(\n                <Item\n                  key={sandwich.type}\n                  name={sandwich.type}\n                  price={sandwich.price}\n                  isInStock={checkStock === true ? 'inStock' : ingrStyle.outOfStock}\n                  imgSrc={this.nameToImgSrc(sandwich.type)}\n                  onClick={() => this.addOrderItem(sandwich, checkStock)}\n                />\n              )\n            })}\n          </ItemWrapper>\n        );\n      case 1:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'sauce');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 2:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'cheese');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 3:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'veggies');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 5:\n        return(\n          <div className={`${style.submit} text-center`}>\n            <h1 className=\"display-3 mb-5\">Thank You!</h1>\n            <div className={`${style.order_num_panel} shadow p-3`}>\n              <h1>Your order number is:</h1>\n              <h1 className={`${style.order_num} display-3`}>{'#' + this.state.orderNumber}</h1>\n            </div>\n          </div>\n        );\n      default:\n        return(\n          <div>\n            <p>Something Went Wrong!</p>\n            <button onClick={this.reset}>Return</button>\n          </div>\n        );\n    }\n  }\n\n  ingredientsRender = props => {\n    return(\n      <IngredientWrapper \n        next={this.nextPage}\n        previous={this.previousPage}\n      >\n        {props.ingredients.map(ingredient => {\n          const ing = this.state.order[this.state.order.length - 1].ingredients;\n          return(\n            <Ingredient\n              key={ingredient.name}\n              name={ingredient.name}\n              imgSrc={this.nameToImgSrc(ingredient.name)}\n              isInStock={ingredient.stock > 0 ? 'inStock' : ingrStyle.outOfStock}\n              isselected={ing.indexOf(ingredient.name) > -1 ? ingrStyle.selected : ''}\n              onClick={() => this.ingredientToggle(ingredient)}\n            />\n          )\n        })} \n      </IngredientWrapper>\n    )\n  } \n\n  render() {\n    if (this.state.timeOver === true) {\n      return(<Redirect to='/' />);\n    }\n\n    return(\n      <div className=\"row justify-content-start\">\n        <div className=\"col-9\">\n          <div className={style.menu_container}>\n          <this.pageRender />\n          </div>\n        </div>\n        \n        <Order\n          total={this.calculateTotal()}\n          back={this.previousPage}\n        >\n          {this.state.order.map((sandwich, index) => {\n            const ingredients = sandwich.ingredients;\n            return(\n              <OrderItem\n                name={sandwich.type}\n                key={sandwich.type + index}\n                price={sandwich.price.toFixed(2)}\n                onClick={() => this.deleteSandwich(index)}\n              >\n                {ingredients.map(ingredient => {\n                  return(\n                    <OrderCustom\n                      key={ingredient}\n                      name={ingredient}\n                      onClick={() => this.deleteIngredient(ingredient.name, index)}\n                    />\n                  );\n                })}\n              </OrderItem>\n            );\n          })}\n        </Order>         \n        \n      </div>\n    )\n  }\n}\n\nexport default Menu;","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import Start from './pages/Start';\nimport Menu from './pages/Menu';\n// import Admin from './pages/Admin';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    data: null,\n    inventory: [],\n    counter: 0\n  }\n\n  componentDidMount() {\n    this.getMenuData(() => {});\n    axios.get(\"/api/test\").then(res => {\n      console.log(res.data, \"hello\")\n\n    }).catch( err => console.log(err));\n\n  }\n  \n  getMenuData = callback => {\n    axios.get(\"/api/menu\")\n    .then(res => {\n      console.log('Menu Data:', res.data);\n      const inventory = this.cloneIngredients(res.data.ingredients);\n      this.setState({\n        data: res.data,\n        inventory: inventory\n      });\n      console.log('Inventory:', this.state.inventory);\n    }).catch( err => console.log(err));\n\n    return callback();\n  }\n\n  cloneIngredients = ingredients => {\n    const ingrClone = ingredients.map( ingredient => {\n      let newObj = Object.assign({}, ingredient);\n      newObj.newStock = ingredient.stock;\n      return newObj;\n    });\n    return ingrClone;\n  }\n  \n  menuRender = (props) => {\n    if (this.state.data) {\n      return <Menu {...props}\n        menuData={this.state.data}\n        inventory={this.state.inventory}\n        getMenuData={() => this.getMenuData()}\n        />\n    }\n\n    return <h1>{'Loading ....'}</h1>\n  }\n\n  handleInventoryChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const newInventory = this.state.inventory;\n\n    newInventory.forEach( ingredient => {\n      if( ingredient.name === name ){\n        ingredient.newStock = value;\n      }\n    });\n\n    this.setState({\n      inventory: newInventory,\n    });\n  }\n\n  render() {\n\n    return (\n\n      <h1>TEST Test</h1>\n\n      // <Router basename={process.env.PUBLIC_URL}>\n      //   <Switch>\n      //     <Route exact path=\"/\" component={Start} />\n      //     <Route \n      //       exact path=\"/admin\" \n      //       render={(props) => \n      //         <Admin {...props}\n      //           inventory={this.state.inventory}\n      //           getMenuData={(cb) => this.getMenuData(cb)}\n      //           handleInventoryChange={(event) => this.handleInventoryChange(event)}\n      //         />\n      //       }\n      //     />\n      //     <Route \n      //       exact path=\"/menu\" \n      //       render={(props) => this.menuRender(props)} \n      //     />\n      //   </Switch>\n      // </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}