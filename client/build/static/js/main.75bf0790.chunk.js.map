{"version":3,"sources":["components/Ingredient/Ingredient.module.css","pages/Menu/Menu.module.css","components/Order/Order.module.css","pages/Start/Start.module.css","components/Item/Item.module.css","components/Item/ItemWrapper.module.css","components/Ingredient/IngredientWrapper.module.css","pages/Start/Start.js","components/Item/Item.js","components/Item/ItemWrapper.js","components/Ingredient/Ingredient.js","components/Ingredient/IngredientWrapper.js","components/Order/Order.js","components/OrderItem/OrderCustom.js","components/OrderItem/OrderItem.js","pages/Menu/Menu.js","pages/Admin/Admin.js","App.js","index.js"],"names":["module","exports","panel","outOfStock","selected","image","menu_container","submit","order_num_panel","order_num","order_panel","order_items","total","start","start_btn","name","cancel_btn","submit_btn","menu_btn","Start","react_default","a","createElement","Link","to","type","className","concat","style","Component","Item","this","props","isInStock","onClick","src","imgSrc","alt","price","ItemWrapper","children","buttonDisplay","Ingredient","isselected","IngredientWrapper","previous","next","Order","bottom","maxScrollTop","_this","orderItems","scrollHeight","clientHeight","scrollTop","_this2","ref","el","OrderCustom","OrderItem","title","aria-hidden","Menu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","order","timeOver","orderPage","orderNumber","ingredientToggle","ingredient","size","length","i","ingredients","indexOf","stock","addIngredient","removeIngredient","addOrderItem","sandwich","newSandwich","id","meat","newStock","inventory","forEach","meatStock","find","quantity","console","log","updateTotal","updateOrder","slice","push","setState","nextPage","deleteSandwich","meats","toppings","topping","ingredientStock","splice","newOrder","deleteIngredient","j","calculateTotal","toFixed","page","previousPage","index","moreFood","reset","checkout","data","axios","post","then","response","getMenuData","setTimeout","catch","err","sandwichStock","check","requiredMeat","stockedMeat","nameToImgSrc","replace","Math","floor","random","pageRender","ItemWrapper_ItemWrapper","menuData","sandwiches","map","checkStock","Item_Item","key","ingrStyle","filter","ingredientsRender","IngredientWrapper_IngredientWrapper","ing","Ingredient_Ingredient","orderID","_this3","Redirect","components_Order_Order","back","OrderItem_OrderItem","OrderCustom_OrderCustom","AuthState","isAuthenticated","login","cb","logout","Admin","username","pin","counter","allowSubmit","redirect","message","cloneInventory","newObj","assign","logOut","event","preventDefault","res","LoginButton","disabled","InventoryButton","handleInventorySubmit","Message","role","LoginForm","onSubmit","handleLoginSubmit","htmlFor","value","onChange","handleInputChange","ControlPanel","height","overflowY","scope","e","min","max","handleInventoryChange","width","bind","assertThisInitialized","get","user","target","defineProperty","_this4","password","userInfo","_this5","status","App","callback","cloneIngredients","menuRender","pages_Menu_Menu","newInventory","BrowserRouter","basename","process","Switch","Route","exact","path","component","render","pages_Admin_Admin","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.75bf0790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Ingredient_panel__3AOsF\",\"outOfStock\":\"Ingredient_outOfStock__3uiwX\",\"selected\":\"Ingredient_selected__1BQH3\",\"image\":\"Ingredient_image__1dW71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_container\":\"Menu_menu_container__3-PgW\",\"submit\":\"Menu_submit__2MbnJ\",\"order_num_panel\":\"Menu_order_num_panel__1tvXF\",\"order_num\":\"Menu_order_num__3EiRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_panel\":\"Order_order_panel__1LPcT\",\"order_items\":\"Order_order_items__3W1yG\",\"total\":\"Order_total__31fxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"Start_start__C9Pnz\",\"start_btn\":\"Start_start_btn__1xCW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Item_name__3a8Gj\",\"image\":\"Item_image__1li23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancel_btn\":\"ItemWrapper_cancel_btn__187wi\",\"submit_btn\":\"ItemWrapper_submit_btn__1jhmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_btn\":\"IngredientWrapper_menu_btn__2krYy\"};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './Start.module.css';\n\nclass Start extends Component {\n\n  render() {\n    return (\n    <div>\n      <Link to=\"/admin\">\n        <button type=\"button\" className=\"btn btn-lg float-right m-4\">\n          Associate login\n        </button>\n      </Link>\n      <div className={`${style.start} row  m-0`}>\n        <div className=\"col-12 text-center\">\n          <h1 className=\"display-1\">Sandwich Store</h1>\n          <Link to=\"/menu\"><div className={`${style.start_btn} shadow-sm mt-3`}>Start</div></Link>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Start;","import React, { Component } from 'react';\nimport style from './Item.module.css'\n\nclass Item extends Component {\n\n  render() {\n    return (\n      <div className=\"col-6\">\n        <div\n          className={`${style.name} media m-2 shadow ${this.props.isInStock}`}\n          onClick={this.props.onClick}\n        >\n          <img\n            className={style.image}\n            src={this.props.imgSrc}\n            alt={this.props.name + \" sandwich\"}\n            />\n          <div className=\"media-body\">\n            <h1>{this.props.name}</h1>\n            <h3>{\"$\" + this.props.price}</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport { Item };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './ItemWrapper.module.css';\n\nclass ItemWrapper extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"display-4 text-center\">Sandwiches</h1>\n        <div className=\"p-2\">\n          <div className=\"row\">\n            {this.props.children}\n          </div>\n          <div className={\"row\"}>\n            <div className=\"col-4\">\n              <Link to=\"/\">\n                <div className={`${style.cancel_btn} text-center mr-3 p-1`}>\n                  <h2 className=\"align-middle\">Cancel Order</h2>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-8\">\n              <div className={`${style.submit_btn} text-center mr-3 p-1 ${this.props.buttonDisplay}`} onClick={this.props.onClick}>\n                <h2 className=\"align-middle\">Submit Order</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { ItemWrapper };","import React, { Component } from 'react';\nimport style from './Ingredient.module.css';\n\nclass Ingredient extends Component {\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div\n          className={`${style.panel} m-3 shadow text-center ${this.props.isInStock} ${this.props.isselected}`}\n          onClick={this.props.onClick}\n        >\n          <img\n            className={style.image}\n            src={this.props.imgSrc}\n            alt={this.props.name}\n          />          \n          <h2>{this.props.name}</h2>\n          <p><b>Out of stock</b></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Ingredient };","import React, { Component } from 'react';\nimport style from './IngredientWrapper.module.css';\n\nclass IngredientWrapper extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"m-3 text-center display-4\">Choose Your Ingredients</h1>\n        <div className=\"p-2\">\n          <div className=\"row\">\n            {this.props.children}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3 offset-3\">\n            <div className={`${style.menu_btn} shadow-sm`} onClick={this.props.previous}>Back</div>\n          </div>            \n          <div className=\"col-3\">\n            <div className={`${style.menu_btn} shadow-sm`} onClick={this.props.next}>Next</div>\n          </div>          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport { IngredientWrapper };","import React, { Component } from 'react';\nimport style from './Order.module.css';\n\nclass Order extends Component {\n  componentDidMount() {\n    this.bottom();\n  }\n\n  componentDidUpdate() {\n    this.bottom();\n  }\n\n  bottom = () => {\n    const scrollHeight = this.orderItems.scrollHeight;\n    const height = this.orderItems.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    this.orderItems.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  }\n\n  render() {\n    return(\n      <div className={style.order_panel}>\n        <div className={style.order_items} ref={(el) => {this.orderItems = el;}}>\n          {this.props.children}\n        </div>\n        <h2 className={`${style.total} mr-4`}>Total: {\"$\" + this.props.total}</h2>\n      </div>\n    )\n  }\n};\n\nexport default Order;","import React, { Component } from 'react';\r\n\r\nclass OrderCustom extends Component {\r\n  render() {\r\n    return(\r\n      <li>\r\n        {this.props.name}\r\n        {/* <button onClick={this.props.onClick}>Delete</button> */}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport { OrderCustom };","import React, { Component } from 'react';\r\nimport './orderItem.css';\r\n\r\nclass OrderItem extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"Order-Item clearfix\">\r\n\r\n        <span className=\"delete-btn mr-2\" onClick={this.props.onClick}>\r\n          <span className=\"oi oi-x\" title=\"x\" aria-hidden=\"true\"></span>\r\n        </span>\r\n\r\n        <div className=\"order-item-info\">\r\n\r\n          <span className=\"name h5\">\r\n            <strong>\r\n              {this.props.name + \" Sandwich\"}\r\n            </strong>         \r\n          </span>\r\n  \r\n          <span className=\"price h5\"><strong>{\"$\" + this.props.price}</strong></span>\r\n          \r\n          <ul>\r\n            {this.props.children}\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { OrderItem };","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Item, ItemWrapper } from './../../components/Item';\nimport { Ingredient, IngredientWrapper } from './../../components/Ingredient';\nimport Order from './../../components/Order';\nimport { OrderItem, OrderCustom } from './../../components/OrderItem';\nimport { Redirect } from 'react-router';\nimport style from './Menu.module.css';\nimport ingrStyle from './../../components/Ingredient/Ingredient.module.css';\nimport axios from 'axios';\n\n// TODO: \n// * Make terms more consistent:\n// * - non-meat ingredients should be 'toppings'\n// * - ingredients sould refer to meat and toppings\n// * Try to consolidate addIngredient, removeIngredient, and deleteIngredient methods\n// * Get deleteIngredient method working, add a delete icon on hover for orderCustom component\n// * Remove the state and use props where a state would be redundant\n\nclass Menu extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.orderID = 0;\n  }\n\n  state = {\n    order: [],\n    timeOver: false,\n    orderPage: 0,\n    total: 0,\n    orderNumber: 0  \n  }\n\n  // Add or remove an ingredient from a sandwich being customized\n  ingredientToggle = ingredient => {\n\n    const size = this.state.order.length - 1\n    // Check if the ingredient is selected for the current sandwich\n    const i = this.state.order[size].ingredients.indexOf(ingredient.name);\n\n    // Check the order for the selected ingredient\n    if( i === -1 ) {\n      // Check if the topping is in stock\n      if (ingredient.stock > 0){\n        ingredient.stock--;\n        this.addIngredient(ingredient);\n      }\n    } else {\n      ingredient.stock++;\n      this.removeIngredient(i);\n    };\n  }\n\n  // Add a sandwich to the order\n  addOrderItem = (sandwich, isInStock) => { \n\n    if(isInStock){   \n      let newSandwich = {\n        id: sandwich.id,\n        type: sandwich.type,\n        meat: sandwich.meat,\n        ingredients: [],\n        price: sandwich.price\n      };\n\n      const newStock = this.props.inventory;\n\n      newSandwich.meat.forEach( meat => {\n        let meatStock = newStock.find( ingredient => ingredient.name === meat.name )\n        meatStock.stock -= meat.quantity;\n        console.log(meatStock.name, meatStock.stock);\n      });\n\n      // Add the sandwich's price to the total price\n      let updateTotal = this.state.total;\n      updateTotal += sandwich.price;\n      // Add the sandwich to the order\n      let updateOrder = this.state.order.slice();\n      updateOrder.push(newSandwich);\n\n      // Update the state\n      this.setState({\n        // inventory: newStock,\n        order: updateOrder,\n        total: updateTotal\n      });\n\n      this.nextPage();\n    }\n  }\n\n  // Remove a sandwich from an order\n  deleteSandwich = i => {\n\n    // Add the sandwich ingredients back to the stock\n    const inventory = this.props.inventory;\n    const sandwich = this.state.order[i];\n    const meats = sandwich.meat;\n    const toppings = sandwich.ingredients;\n    meats.forEach( meat => {\n      let meatStock = inventory.find( ingredient => ingredient.name === meat.name )\n      meatStock.stock += meat.quantity;\n      console.log(meatStock.name, meatStock.stock);\n    });\n    toppings.forEach( topping => {\n      let ingredientStock = inventory.find( ingredient => ingredient.name === topping );\n      ingredientStock.stock++;\n      console.log(ingredientStock.name, ingredientStock.stock);\n    });\n\n    let updateOrder = this.state.order\n    // If the sandwich being deleted is in the process of being customized, if it is last in the array\n    updateOrder.splice(i, 1);\n    this.setState({\n      order: updateOrder\n    });\n\n    // Conditions for returning to the first page after removing a sandwich from the order\n    // -When the user removes the sandwich they are customizing\n    // -When the order is emptied\n    if( (i === (this.state.order.length - 1) && this.state.orderPage < 4) || updateOrder.length === 0 ){\n      // Display the first order page\n      this.setState({orderPage: 0});\n    }\n\n  }\n  // Adds ingredient to the order\n  addIngredient = ingredient => {\n    let newOrder = this.state.order.slice();\n    const size = this.state.order.length - 1;\n\n    newOrder[size].ingredients.push(ingredient.name);\n    this.setState({order: newOrder});\n  }\n  // Removes ingredient from the order by toggling off from the menu\n  removeIngredient = i => {\n    let newOrder = this.state.order.slice();\n    const size = this.state.order.length - 1;\n\n    newOrder[size].ingredients.splice(i, 1);\n    this.setState({order: newOrder});\n  }\n\n\n  // Removes ingredient from order by hitting delete button in the order panel\n  deleteIngredient = (ingredient, i) => {\n    const j = this.state.order[i].ingredients.indexOf(ingredient);\n    let newOrder = this.state.order.slice();\n    newOrder[i].ingredients.splice(j, 1);\n    this.setState({order: newOrder});\n  }\n\n  // Determine the price of the order\n  calculateTotal = () => {\n    let total = 0;\n    this.state.order.forEach(sandwich => {\n      total += sandwich.price;\n    });\n\n    return total.toFixed(2);\n  }\n\n  nextPage = () => {\n    if(this.state.orderPage === 3) {\n      this.setState({orderPage: 0});\n      return;\n    }\n\n    let page = this.state.orderPage;\n    page++;\n    this.setState({orderPage: page});\n  }\n\n  previousPage = () => {\n    let page = this.state.orderPage;\n    if (page === 1){\n      const index = this.state.order.length - 1;\n      this.deleteSandwich(index);\n    }\n    page--;\n    this.setState({orderPage: page});\n  }\n\n  // Resets the menu page to order another sandwich\n  moreFood = () => {\n\n    this.setState({orderPage: 0});\n  }\n  \n  // Re-initialize the menu page\n  reset = () => {\n    this.setState({\n      order: [],\n      orderPage: 0\n    });\n  }\n\n  // Submit an order\n  checkout = () => {\n    const data = this.state.order;\n\n    axios.post(\"/api/order\", data).then( response => {\n      console.log(response);\n\n      this.setState({orderPage: 5, orderNumber: response.data.orderNumber});  \n      this.props.getMenuData(()=>{});\n      setTimeout(() => {\n        this.setState({timeOver: true});\n      }, 5000)\n    }).catch( err => {\n      console.log(err);\n    });\n  }\n\n  sandwichStock = meats => {\n    let check = true;\n    meats.forEach( requiredMeat => {\n\n      const stockedMeat = this.props.inventory\n        .find( ingredient => ingredient.name === requiredMeat.name);\n\n      if(requiredMeat.quantity > stockedMeat.stock){check = false};\n    });\n\n    return check;\n  }\n\n  nameToImgSrc = name => {\n    let src = name;\n    src = src.replace(\" \", \"_\");\n    src = \"./images/\" + src + \"_200x120.png\";\n\n    return src;\n  }\n\n  // Gives a number for the order.\n  orderNumber = () => {\n    // Order number is a random placeholder number for now\n    return Math.floor(Math.random() * 100) + 1;\n  }\n\n  // Determine what gets rendered based on the orderPage variable\n  pageRender = () => {\n    let ingredients;\n    switch (this.state.orderPage) {\n      case 0:\n        return(\n               \n          <ItemWrapper\n            buttonDisplay={this.state.order.length === 0 ? 'd-none' : ''}\n            onClick={this.checkout}\n          >     \n            {this.props.menuData.sandwiches.map(sandwich => {\n              let checkStock = this.sandwichStock(sandwich.meat);\n              return(\n                <Item\n                  key={sandwich.type}\n                  name={sandwich.type}\n                  price={sandwich.price}\n                  isInStock={checkStock === true ? 'inStock' : ingrStyle.outOfStock}\n                  imgSrc={this.nameToImgSrc(sandwich.type)}\n                  onClick={() => this.addOrderItem(sandwich, checkStock)}\n                />\n              )\n            })}\n          </ItemWrapper>\n        );\n      case 1:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'sauce');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 2:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'cheese');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 3:\n        ingredients = this.props.inventory\n          .filter(ingredient => ingredient.type === 'veggies');\n        return(<this.ingredientsRender ingredients={ingredients}/>)\n      case 5:\n        return(\n          <div className={`${style.submit} text-center`}>\n            <h1 className=\"display-3 mb-5\">Thank You!</h1>\n            <div className={`${style.order_num_panel} shadow p-3`}>\n              <h1>Your order number is:</h1>\n              <h1 className={`${style.order_num} display-3`}>{'#' + this.state.orderNumber}</h1>\n            </div>\n          </div>\n        );\n      default:\n        return(\n          <div>\n            <p>Something Went Wrong!</p>\n            <button onClick={this.reset}>Return</button>\n          </div>\n        );\n    }\n  }\n\n  ingredientsRender = props => {\n    return(\n      <IngredientWrapper \n        next={this.nextPage}\n        previous={this.previousPage}\n      >\n        {props.ingredients.map(ingredient => {\n          const ing = this.state.order[this.state.order.length - 1].ingredients;\n          return(\n            <Ingredient\n              key={ingredient.name}\n              name={ingredient.name}\n              imgSrc={this.nameToImgSrc(ingredient.name)}\n              isInStock={ingredient.stock > 0 ? 'inStock' : ingrStyle.outOfStock}\n              isselected={ing.indexOf(ingredient.name) > -1 ? ingrStyle.selected : ''}\n              onClick={() => this.ingredientToggle(ingredient)}\n            />\n          )\n        })} \n      </IngredientWrapper>\n    )\n  } \n\n  render() {\n    if (this.state.timeOver === true) {\n      return(<Redirect to='/' />);\n    }\n\n    return(\n      <div className=\"row justify-content-start\">\n        <div className=\"col-9\">\n          <div className={style.menu_container}>\n          <this.pageRender />\n          </div>\n        </div>\n        \n        <Order\n          total={this.calculateTotal()}\n          back={this.previousPage}\n        >\n          {this.state.order.map((sandwich, index) => {\n            const ingredients = sandwich.ingredients;\n            return(\n              <OrderItem\n                name={sandwich.type}\n                key={sandwich.type + index}\n                price={sandwich.price.toFixed(2)}\n                onClick={() => this.deleteSandwich(index)}\n              >\n                {ingredients.map(ingredient => {\n                  return(\n                    <OrderCustom\n                      key={ingredient}\n                      name={ingredient}\n                      onClick={() => this.deleteIngredient(ingredient.name, index)}\n                    />\n                  );\n                })}\n              </OrderItem>\n            );\n          })}\n        </Order>         \n        \n      </div>\n    )\n  }\n}\n\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AuthState = {\r\n  isAuthenticated: false,\r\n  login(cb) {\r\n    console.log(\"Authorize state: true\");\r\n    this.isAuthenticated = true;\r\n    return cb();\r\n  },\r\n  logout(cb) {\r\n    this.isAuthenticated = false;\r\n    return cb();\r\n  }\r\n};\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n    this.handleInventorySubmit = this.handleInventorySubmit.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n  }\r\n\r\n  state = {\r\n    username: '',\r\n    pin: '',\r\n    counter: 0,\r\n    allowSubmit: true,\r\n    redirect: false,\r\n    message: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/user/').then( res => { \r\n      console.log(res.data.user);\r\n      if ( res.data.user ) {\r\n        this.login();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  cloneInventory = ingredients => {\r\n    const ingrClone = ingredients.map( ingredient => {\r\n      let newObj = Object.assign({}, ingredient);\r\n      newObj.newStock = ingredient.stock;\r\n      return newObj;\r\n    });\r\n    return ingrClone;\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    console.log(this.state.username, this.state.pin);\r\n\r\n     axios.post('/user/login', {\r\n      username: this.state.username,\r\n      password: this.state.pin\r\n    }).then( res => {\r\n      \r\n      if (res.data.userInfo) {\r\n        console.log(res);\r\n\r\n        this.login();\r\n        this.setState({\r\n          username: '',\r\n          pin: ''\r\n        });\r\n      } else {\r\n        const message = res.data.message\r\n        console.log(message);\r\n        this.setState({\r\n          message: message\r\n        });\r\n      }\r\n    }).catch( err => console.log(err));\r\n  }\r\n\r\n  handleInventorySubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const inventory = this.props.inventory;\r\n\r\n    axios.post('/api/inventory', {\r\n      inventory: inventory\r\n    }).then( res => {\r\n      console.log(res.data.message);\r\n      if ( res.status === 200 ) {\r\n        this.props.getMenuData(function(){\r\n          console.log('Data update complete')\r\n        });\r\n      }\r\n    }).catch( err => console.log(err));\r\n  }\r\n\r\n  login = () => {\r\n    console.log('Attempting to authorize');\r\n    AuthState.login(() => {\r\n      this.setState( () => ({\r\n        counter: 1\r\n      }));\r\n    });\r\n  }\r\n\r\n  logOut = event => {    \r\n    event.preventDefault();\r\n\r\n    axios.post('/user/logout')\r\n      .then( res => {\r\n        AuthState.logout(() => {\r\n          this.setState( () => ({\r\n            redirect: true\r\n          }));\r\n        })\r\n      }).catch( err => console.log(err));\r\n  }\r\n\r\n  LoginButton = () => {\r\n    return (\r\n      (this.state.username === '' || this.state.pin === '') \r\n      ? <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled>Submit</button>\r\n      : <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    );    \r\n  }\r\n\r\n  InventoryButton = () => {\r\n    return (\r\n      (this.state.allowSubmit === true) \r\n      ? <button onClick={this.handleInventorySubmit} className=\"btn btn-primary btn-lg btn-block float-right\">Submit</button>\r\n      : <button type=\"button\" className=\"btn btn-secondary btn-lg btn-block float-right\" disabled>Submit</button>\r\n    ); \r\n  }\r\n\r\n  Message = () => {\r\n    if (this.state.message !== ''){\r\n      return(\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {this.state.message}\r\n        </div>\r\n      );\r\n    } else { return null }\r\n  }\r\n\r\n  LoginForm = () => {\r\n    return(\r\n      <div>\r\n        <Link to='/'>\r\n          <button type=\"submit\" className=\"btn btn-danger btn-lg m-3\">Back</button>\r\n        </Link>\r\n        <div className=\"container\">          \r\n          <div className=\"row mt-5\">        \r\n            <div className=\"jumbotron col-md-6 offset-md-3\">\r\n            <h1 className=\"text-center mb-4\">Associate Login</h1>\r\n              <this.Message />\r\n              <form onSubmit={this.handleLoginSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    className=\"form-control\"\r\n                    onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"pin\"\r\n                    value={this.state.pin}\r\n                    className=\"form-control\"\r\n                    onChange={this.handleInputChange}/>\r\n                </div>\r\n                <this.LoginButton />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  ControlPanel = () => { \r\n\r\n    return(\r\n      <div>        \r\n        <div className=\"container\">\r\n          <div className=\"row block pt-3 pb-3\">\r\n            <div className=\"col-12\">\r\n              <h3 className=\"float-left\">Control Panel</h3>\r\n              <button onClick={this.logOut} className=\"btn btn-primary float-right\">Log Out</button>\r\n            </div>\r\n          </div>\r\n        \r\n\r\n          <div className=\"row\">\r\n            {/* <div className=\"col-3\">\r\n            </div> */}\r\n            <div className=\"col-12\">\r\n              <h2>Inventory</h2>\r\n              <div style={{height: '600px', overflowY: 'scroll'}}>\r\n                <table className=\"table table-sm table-striped\">\r\n                  <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Ingredient</th>\r\n                    <th scope=\"col\">Type</th>\r\n                    <th scope=\"col\">Current Stock</th>\r\n                    <th scope=\"col\">New Stock</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.inventory.map((ingredient, index) => {\r\n                      return(\r\n                        <tr key={ingredient.name}>\r\n                          <th scope=\"row\">{ingredient.name}</th>\r\n                          <td>{ingredient.type}</td>\r\n                          <td>{ingredient.stock}</td>\r\n                          <td>\r\n                            <form onSubmit={e => { e.preventDefault(); }} >\r\n                              <input \r\n                                className=\"form-control form-control-sm\" \r\n                                name={ingredient.name}\r\n                                value={ingredient.newStock}\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"999\"\r\n                                onChange={this.props.handleInventoryChange}\r\n                                style={{ width: '70px'}}\r\n                              />\r\n                            </form>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <this.InventoryButton />\r\n            </div>  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return(<Redirect to='/' />);\r\n    }\r\n    if (AuthState.isAuthenticated === false) {\r\n      return <this.LoginForm />;\r\n    } else { \r\n      return <this.ControlPanel /> ;\r\n    } \r\n  }\r\n  \r\n}\r\n\r\nexport default Admin;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Start from './pages/Start';\nimport Menu from './pages/Menu';\nimport Admin from './pages/Admin';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    data: null,\n    inventory: [],\n    counter: 0\n  }\n\n  componentDidMount() {\n    this.getMenuData(() => {});\n    axios.get(\"/api/test\").then(res => {\n      console.log(res.data, \"helloooooo\")\n\n    }).catch( err => console.log(err));\n\n  }\n  \n  getMenuData = callback => {\n    axios.get(\"/api/menu\")\n    .then(res => {\n      console.log('Menu Data:', res.data);\n      const inventory = this.cloneIngredients(res.data.ingredients);\n      this.setState({\n        data: res.data,\n        inventory: inventory\n      });\n      console.log('Inventory:', this.state.inventory);\n    }).catch( err => console.log(err));\n\n    return callback();\n  }\n\n  cloneIngredients = ingredients => {\n    const ingrClone = ingredients.map( ingredient => {\n      let newObj = Object.assign({}, ingredient);\n      newObj.newStock = ingredient.stock;\n      return newObj;\n    });\n    return ingrClone;\n  }\n  \n  menuRender = (props) => {\n    if (this.state.data) {\n      return <Menu {...props}\n        menuData={this.state.data}\n        inventory={this.state.inventory}\n        getMenuData={(cb) => this.getMenuData(cb)}\n        />\n    }\n\n    return <h1>{'Loading ....'}</h1>\n  }\n\n  handleInventoryChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const newInventory = this.state.inventory;\n\n    newInventory.forEach( ingredient => {\n      if( ingredient.name === name ){\n        ingredient.newStock = value;\n      }\n    });\n\n    this.setState({\n      inventory: newInventory,\n    });\n  }\n\n  render() {\n\n    return (\n\n      // <h1>TEST Test</h1>\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Start} />\n          <Route \n            exact path=\"/admin\" \n            render={(props) => \n              <Admin {...props}\n                inventory={this.state.inventory}\n                getMenuData={(cb) => this.getMenuData(cb)}\n                handleInventoryChange={(event) => this.handleInventoryChange(event)}\n              />\n            }\n          />\n          <Route \n            exact path=\"/menu\" \n            render={(props) => this.menuRender(props)} \n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}